import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, confusion_matrix

# Load data
spam_data = pd.read_csv('spam.csv', encoding='ISO-8859-1')

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(spam_data['v1'], spam_data['v2'], random_state=0)

# Convert text into numerical features using CountVectorizer
vectorizer = CountVectorizer()
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)

# Train the model using Multinomial Naive Bayes
clf = MultinomialNB()
clf.fit(X_train_vec, y_train)

# Evaluate the model on testing data
y_pred = clf.predict(X_test_vec)
print('Accuracy:', accuracy_score(y_test, y_pred))
print('Confusion matrix:', confusion_matrix(y_test, y_pred))
